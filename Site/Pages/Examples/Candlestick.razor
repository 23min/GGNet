@namespace Site.Pages
@page "/examples/candlestick"

@using NodaTime

@using GGNet

    <div class="container-fluid mt-4">
        
        <div class="row m-4">
            <div class="col-md-6">
                <h2 class="text-center">Candlestick</h2>
                <p>Display technical analysis indicators</p>
                <div class="border rounded-lg bg-light p-3 mt-3">
<pre class="csharp">
<span class="pl-smi">Plot</span>.<span class="pl-en">New</span>(<span class="pl-smi">source</span>, <span class="pl-smi">x</span>: <span class="pl-smi">o</span> <span class="pl-k">=&gt;</span> <span class="pl-smi">o</span>.<span class="pl-smi">date</span>)
   .<span class="pl-en">Title</span>(<span class="pl-s"><span class="pl-pds">"</span>SPY US Equity<span class="pl-pds">"</span></span>)
   .<span class="pl-en">Scale_X_Discrete_Date</span>()
   .<span class="pl-en">Geom_Candlestick</span>(<span class="pl-smi">open</span>: <span class="pl-smi">o</span> <span class="pl-k">=&gt;</span> <span class="pl-smi">o</span>.<span class="pl-smi">open</span>, <span class="pl-smi">high</span>: <span class="pl-smi">o</span> <span class="pl-k">=&gt;</span> <span class="pl-smi">o</span>.<span class="pl-smi">high</span>, <span class="pl-smi">low</span>: <span class="pl-smi">o</span> <span class="pl-k">=&gt;</span> <span class="pl-smi">o</span>.<span class="pl-smi">low</span>, <span class="pl-smi">close</span>: <span class="pl-smi">o</span> <span class="pl-k">=&gt;</span> <span class="pl-smi">o</span>.<span class="pl-smi">close</span>)
   .<span class="pl-en">Geom_Line</span>(<span class="pl-smi">ma</span>, <span class="pl-smi">x</span>: <span class="pl-smi">o</span> <span class="pl-k">=&gt;</span> <span class="pl-smi">o</span>.<span class="pl-smi">date</span>, <span class="pl-smi">y</span>: <span class="pl-smi">o</span> <span class="pl-k">=&gt;</span> <span class="pl-smi">o</span>.<span class="pl-smi">close</span>, <span class="pl-smi">color</span>: <span class="pl-s"><span class="pl-pds">"</span>#ff0055<span class="pl-pds">"</span></span>)
   .<span class="pl-en">YLab</span>(<span class="pl-s"><span class="pl-pds">"</span>Price<span class="pl-pds">"</span></span>)
   .<span class="pl-en">Caption</span>(<span class="pl-s"><span class="pl-pds">"</span>Source: Bloomberg<span class="pl-pds">"</span></span>)
   .<span class="pl-en">Theme</span>(<span class="pl-smi">axisY</span>: <span class="pl-smi">GGNet</span>.<span class="pl-smi">Position</span>.<span class="pl-smi">Right</span>);
</pre>
                </div>
            </div>
            <div class="col-md-6">
                <div class="border rounded-lg p-1" style="background-color: #252A32;">
                    <GGNet.Components.Plot Data=@spy T="GGNet.Datasets.SPY.Bar" TX="LocalDate" TY="Double" />
                </div>
            </div>
        </div>
    </div>

@code {

    Data<GGNet.Datasets.SPY.Bar, LocalDate, double> spy;

    protected override void OnInitialized()
    {
        var source = new GGNet.Source<GGNet.Datasets.SPY.Bar>(GGNet.Datasets.SPY.Load().Where(o => o.date.Year >= 2019 && o.date.Month >= 6));
        var ma = new GGNet.Source<GGNet.Datasets.SPY.Bar>();

        var n = 10;
        var sum = 0.0;

        for (var i = 0; i < source.Count; i++)
        {
            sum += source[i].close;

            if (i >= 10)
            {
                sum -= source[i - n].close;

                ma.Add(new GGNet.Datasets.SPY.Bar
                {
                    date = source[i].date,
                    close = sum / n
                });
            }
        }

        spy = GGNet.Plot.New(source, x: o => o.date)
            .Title("SPY US Equity")
            .Scale_X_Discrete_Date()
            .Geom_Candlestick(open: o => o.open, high: o => o.high, low: o => o.low, close: o => o.close)
            .Geom_Line(ma, x: o => o.date, y: o => o.close, color: "#ffec1b", width: 2)
            .YLab("Price")
            .Caption("Source: Bloomberg")
            .Theme(axisY: GGNet.Position.Right);
    }
}
